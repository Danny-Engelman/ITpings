/* ITpings is available on GitHub: https://github.com/Danny-Engelman/ITpings */
class Router {
    constructor(e) {
        this.we = new Map();
        let t = function() {
            __log("Router", "yellow", ...arguments);
        };
        t(e);
        let o = !1, n = !1, l = e => __toggleClass(e.Ue, "sidebar_icon_selected"), i = e => "article_" + ("" === e ? "dashboard" : e), r = o => {
            let n = i(o.href.split("#")[1]), r = __getElementById("placeholder_" + n);
            __hideElement(r), this.we.set(n, {
                route: n,
                Ue: o,
                Fe: r,
                load: function() {
                    let e = this.Fe;
                    return t("loadroute", this), e.childElementCount < 1 && e.appendChild(__importNode(this.route)), 
                    this;
                },
                show: function() {
                    __showElement(this.Fe, "grid"), l(this);
                }
            });
            let h = e.preload || r.getAttribute("preload");
            h && this.we.get(n);
        };
        [ "hashchange", "load" ].map(e => window.addEventListener(e, () => {
            "load" === e && __querySelectorAll(".sidebar_icon a").map(r);
            let h = i(location.hash.slice(1));
            [o, n] = [ n, this.we.get(h) ], t("changeRoute:", h, n), n.load().show(), o && (__hideElement(o.Fe), 
            l(o));
        }));
    }
}

!function(e, t = {}, o = [], n = {}, l, i = "refresh", r = "EventListener", h = "remove" + r, s = "add" + r) {
    let a, c, d, u, _ = e => document.getElementById(e), p = (e, t) => (a = /\W/.test(e) ? new Function("F", "var p=[];with(F){p.push('" + e.replace(/[\r\t\n]/g, " ").split("<%").join("\t").replace(/((^|%>)[^\t]*)'/g, "$1\r").replace(/\t=(.*?)%>/g, "',$1,'").split("\t").join("');").split("%>").join("p.push('").split("\r").join("\\'") + "');}return p.join('');") : n[e] = n[e] || p(_(e).innerHTML), 
    t ? a(t) : a), g = e => o.map(t => [ ...l.querySelectorAll(t[0]) ].map(o => o[e].apply(o, t.slice(1)))), w = n => e[s](n, e => {
        g(h), l = _("RouterDIV"), o = [], c = t[location.hash.slice(1) || "/"] || t["*"], 
        c && c.l && c.id && (d = new c.l(), c.o(e => {
            g(h), l.innerHTML = p(c.id, d), g(s);
        }), d[i]());
    });
    e.route = ((n, l, r, h = []) => {
        "function" == typeof l && ([r, l] = [ l, null ]), u = ((e, t) => Object.defineProperty(r.prototype, e, {
            value: t
        })), u("on", function() {
            o.push([ ...arguments ]);
        }), u(i, function(e) {
            e.map(e => e());
        }.bind(e, h)), t[n] = {
            id: l,
            l: r,
            o: h.push.bind(h)
        };
    }), w("hashchange"), w("load");
}(window);